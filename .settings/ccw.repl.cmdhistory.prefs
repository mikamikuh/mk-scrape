cmdhistory=["(+ 1 2)" "(in-ns 'mk-scrape.core-test)" "(a-test)" "(load mk-scrape.core-test)" "(a-test)" "(in-ns 'mk-scrape.core)" "(foo)" "(foo 10)" "(in-ns 'mk-scrape.core)" "(convert3)" "(convert2)" "(test5)" "(convert3)" "(convert2)" "(first (test5))" "(convert (first (test5)))" "(convert (first (test5))\\n         )" "(first (test5))" "(convert {\:author \\"\\"})" "(str \\"title\:\\" ({\:title \\"AA\\"} \:title))" "(convert {\:author, \\"2, \:layout, \\"\\", \:img, \\"\\", \:content,\\n \\"\\"})" "(convert {\:author, \\"\\", \:layout, \\"\\", \:img, \\"\\", \:content,\\n    \\"\\"})" "(convert2)" "(convert3)" "(convert2)" "(convert3)" "(create-paths \\"/Users/mkouhei0910/project/web/html\\")" "(let [paths (create-paths \\"/Users/mkouhei0910/project/web/html\\")\\n      ]\\n  (convert-to-string (convert-to-seq (convert-to-map (fetch paths)))))" "(convert-to-map (fetch (create-paths \\"/Users/mkouhei0910/project/web/html\\")))" "(create-paths \\"/Users/mkouhei0910/project/web/html\\")" "(fetch (create-paths \\"/Users/mkouhei0910/project/web/html\\"))" "(let [paths (create-paths \\"/Users/mkouhei0910/project/web/html\\")]\\n     (convert-to-string (convert-to-seq (convert-to-map (fetch paths)))))" "(let [paths (create-paths \\"/Users/mkouhei0910/project/web/html\\")]\\n        (convert-to-map (fetch paths)))" "(let [paths (create-paths \\"/Users/mkouhei0910/project/web/html\\")]\\n        (convert-to-string (map \\n                             convert-to-seq (convert-to-map (fetch paths)))))" "(let [paths (create-paths \\"/Users/mkouhei0910/project/web/html\\")]\\n           (map convert-to-string (map \\n                                    convert-to-seq (convert-to-map (fetch paths)))))" "(execute \\"/Users/mkouhei0910/project/web/html\\")" "(in-ns 'mk-scrape.export)" "(time/date-time 2000 1 1)" "(time/plus (time/date-time 2000 1 1) (time/day 1))" "(time/plus (time/date-time 2000 1 1) (time/days 1))" "(def dd (time/plus (time/date-time 2000 1 1) (time/days 1)))" "(def custom-formatter (format/formatter \\"yyyy-mm-dd.md\\"))" "(format/unparse custom-formatter dd)" "(use 'mk-scrape.core)" "(def data (execute \\"/Users/mkouhei0910/project/web/html\\"))" "(data)" "data" "(loop [seq data date dd] (if (empty? seq) nil (do \\n                                                (with-open [wrtr (io/writer (str (format/unparse custom-formatter date) \\".md\\"))] (.write wrtr (first seq)))\\n                                                (recur (rest seq) (time/plus date (time/days 1))))))" "(use 'mk-scrape.export)" "(use 'mk-scrape.core)" "(def d (execute \\"/Users/mkouhei0910/project/web/html\\")\\n  )" "(export d \\"/Users/mkouhei0910/project/web/shakariki/items/_posts\\")" "(export d \\"/Users/mkouhei0910/project/web/shakariki/items/_posts/\\")" "(def d (execute \\"/Users/mkouhei0910/project/web/html\\"))" "(export d \\"/Users/mkouhei0910/project/web/shakariki/items/_posts\\")" "(export d \\"/Users/mkouhei0910/project/web/shakariki/items/_posts/\\")" "(def d (execute \\"/Users/mkouhei0910/project/web/html\\")\\n  )" "(export d \\"/Users/mkouhei0910/project/web/shakariki/items/_posts/\\")" "(def d (execute \\"/Users/mkouhei0910/project/web/html\\")\\n  )" "(export d \\"/Users/mkouhei0910/project/web/shakariki/items/_posts/\\")" "(def d (execute \\"/Users/mkouhei0910/project/web/html\\")\\n  )" "d" "(def d (execute \\"/Users/mkouhei0910/project/web/html\\"))" "(export d \\"/Users/mkouhei0910/project/web/shakariki/items/_posts/\\")" "initial-date" "(format/unparse custom-formatter initial-date)" "(clj-time.format/unparse custom-formatter initial-date)" "(clj-time.format/unparse custom-formatter (clj-time.core/date-time 2000 2\\n                                                                  1))" "(clj-time.format/unparse custom-formatter (clj-time.core/date-time 2014\\n                                                                   2\\n                                                                     1))" "(clj-time.format/unparse custom-formatter (clj-time.core/date-time 2014\\n                                                                      5\\n                                                                     \\n                                                                        1))" "(clj-time.format/unparse custom-formatter (clj-time.core/local-date 2014\\n                                                                      2\\n                                                                        1))" "(clj-time.format/unparse custom-formatter (clj-time.core/local-date-time 2014\\n                                                                         2\\n                                                                           1))" "(clj-time.format/unparse custom-formatter (clj-time.core/local-date-time 2014 02 01))" "(clj-time.format/unparse custom-formatter (clj-time.core/date-time 2014 02 01))" " (clj-time.format/unparse custom-formatter (clj-time.core/date-time 1986 02 01))" " (clj-time.format/unparse custom-formatter (clj-time.core/date-time 2014 02 02\\n                                                                    ))" "(clj-time.format/unparse custom-formatter (clj-time.core/date-time 2014 10\\n                                                                   02))" " (clj-time.core/date-time 2014 10 02)" "(clj-time.format/unparse custom-formatter (clj-time.core/date-time 2014 10\\n                                                                      02))" "(defn hoge (export (execute \\"/Users/mkouhei0910/project/web/html\\") \\"/Users/mkouhei0910/project/web/shakariki/items/_posts/\\"))" "(defn hoge [] \\n  (export (execute \\"/Users/mkouhei0910/project/web/html\\") \\"/Users/mkouhei0910/project/web/shakariki/items/_posts/\\"))" "(hoge)" "(first (file-seq \\"/Users/mkouhei0910/project/web/html\\"))" "(first (file-seq (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\"))\\n       )" "(def f (first (file-seq (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\"))))" "(mk-scrape.copy/get-file \\"/Users/mkouhei0910/project/web/html\\")" "(mk-scrape.copy/get-file \\"/Users/mkouhei0910/project/web/shakariki_items\\" \\"GI99106ZAJGD_01_04.jpg\\")" "(mk-scrape.copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items\\") \\"GI99106ZAJGD_01_04.jpg\\")" "(file-seq (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items\\"))" "(first (file-seq (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items\\")))" "(.isFile (first (file-seq (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items\\"))))" "(.getName (first (file-seq (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items\\"))))" "(.getName (first (rest (file-seq (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items\\")))))" "(mk-scrape.copy/get-file \\"/Users/mkouhei0910/project/web/shakariki_items\\" \\"hogehoge.jpg\\")" "(mk-scrape.copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items\\") \\"hogehoge.jpg\\")" "(first [])" "(mk-scrape.copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items\\") \\"hogehoge.jpg\\")" "(map \#(println (class %))\\n     (file-seq (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items\\")))" "(map \#(class %)\\n        (file-seq (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items\\")))" "(cons [1 2] [3 4])" "(conj [1 2] [3 4])" "(merge [1 2] [3 4])" "(concat [1 2] [3 4])" "(mk-scrape.copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items\\") \\"hogehoge.jpg\\")" "(mk-scrape.copy/get-file \\"/Users/mkouhei0910/project/web/shakariki_items/\\" \\"\\")" "(mk-scrape.copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items/\\") \\"\\")" "(mk-scrape.copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/shakariki_items\\") \\"GI99106ZAJA0_01_02.jpg\\")" "(split \\"Some words to split\\" \#\\"\\\\s+\\")" "(clojure.string/split \\"Some words to split\\" \#\\"\\\\s+\\")" "(clojure.string/split \\"./d\u30AF\u30EA\u30A8\u30A4\u30BF\u30FC\u30BA\uFF5C\u300CSmith\u3000No.3\u300D\u3000\u9752\u6728\u4FCA\u6A39\u30C7\u30B6\u30A4\u30F3\u3000AQUOS\u30B1\u30FC\u30B9 by \u30A2\u30AA\u30AD \u30C8\u30B7\u30AD \u30B9\u30DE\u30DB\u30FB\u30B1\u30FC\u30BF\u30A4\u30B0\u30C3\u30BA \u2026_files/GI99106Z8UC1_01_02.jpg\\"\\n                      \\"GI.+\\\\.jpg\\")" "\\n(clojure.string/split \\"./d\u30AF\u30EA\u30A8\u30A4\u30BF\u30FC\u30BA\uFF5C\u300CSmith\u3000No.3\u300D\u3000\u9752\u6728\u4FCA\u6A39\u30C7\u30B6\u30A4\u30F3\u3000AQUOS\u30B1\u30FC\u30B9 by \u30A2\u30AA\u30AD \u30C8\u30B7\u30AD \u30B9\u30DE\u30DB\u30FB\u30B1\u30FC\u30BF\u30A4\u30B0\u30C3\u30BA \u2026_files/GI99106Z8UC1_01_02.jpg\\"\\n                         \\"GI.+\u00A5.jpg\\")" "(clojure.string/split \\"./d\u30AF\u30EA\u30A8\u30A4\u30BF\u30FC\u30BA\uFF5C\u300CSmith\u3000No.3\u300D\u3000\u9752\u6728\u4FCA\u6A39\u30C7\u30B6\u30A4\u30F3\u3000AQUOS\u30B1\u30FC\u30B9 by \u30A2\u30AA\u30AD \u30C8\u30B7\u30AD \u30B9\u30DE\u30DB\u30FB\u30B1\u30FC\u30BF\u30A4\u30B0\u30C3\u30BA \u2026_files/GI99106Z8UC1_01_02.jpg\\"\\n                         \#\\"GI.+\u00A5.jpg\\")" "(clojure.string/split \\"./d\u30AF\u30EA\u30A8\u30A4\u30BF\u30FC\u30BA\uFF5C\u300CSmith\u3000No.3\u300D\u3000\u9752\u6728\u4FCA\u6A39\u30C7\u30B6\u30A4\u30F3\u3000AQUOS\u30B1\u30FC\u30B9 by \u30A2\u30AA\u30AD \u30C8\u30B7\u30AD \u30B9\u30DE\u30DB\u30FB\u30B1\u30FC\u30BF\u30A4\u30B0\u30C3\u30BA \u2026_files/GI99106Z8UC1_01_02.jpg\\"\\n                            \#\\"(GI.+\u00A5.jpg)\\")" "(clojure.string/split \\"./d\u30AF\u30EA\u30A8\u30A4\u30BF\u30FC\u30BA\uFF5C\u300CSmith\u3000No.3\u300D\u3000\u9752\u6728\u4FCA\u6A39\u30C7\u30B6\u30A4\u30F3\u3000AQUOS\u30B1\u30FC\u30B9 by \u30A2\u30AA\u30AD \u30C8\u30B7\u30AD \u30B9\u30DE\u30DB\u30FB\u30B1\u30FC\u30BF\u30A4\u30B0\u30C3\u30BA \u2026_files/GI99106Z8UC1_01_02.jpg\\"\\n                               \#\\"/\\")" "(mk-scrape.core/execute \\"/Users/mkouhei0910/project/web/html/\\")" "(in-ns 'mk-scrape.core)" "(get-img-list \\"d\u30AF\u30EA\u30A8\u30A4\u30BF\u30FC\u30B9\u3099\uFF5C\u732B\u306E\u5BCC\u58EB\u5C71\u67C4\u30B1\u30FC\u30B9 by unicoworks \u30B9\u30DE\u30DB\u30FB\u30B1\u30FC\u30BF\u30A4\u30AF\u3099\u30C3\u30B9\u3099 \u30B1\u30FC\u30B9\u30FB\u30B9\u30BF\u30F3\u30C8\u3099 \u30D5\u30A1\u30C3\u30B7\u30E7\u30F3.html\\")" "(get-img-list \\"/Users/mkouhei0910/project/web/hoge.html\\")" "(get-img-list \\"/Users/mkouhei0910/project/web/html\\")" "(convert-to-map \\"/Users/mkouhei0910/project/web/hoge.html\\")" "(conv/create-paths \\"/Users/mkouhei0910/project/web/hoge.html\\")" "(conv/create-paths \\"/Users/mkouhei0910/project/web/html\\")" "(get-img-list \\"/Users/mkouhei0910/project/web/html\\")" "(get-copy-resource \\"/Users/mkouhei0910/project/web/html\\")" "(copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\") %)" "(copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\") \\"hoge\\")" "(clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\")" "(copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\") \\"\\")" "(mk-scrape.copy (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\" \\"hogehoge\\"))" "(mk-scrape.copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\" \\"hogehoge\\"))" " (mk-scrape.copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\") \\"hogehoge\\")" "(file-seq (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\"))" "(mk-scrape.copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\" \\"hogehoge\\"))" "(mk-scrape.copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\") \\"hogehoge\\")" "(concat () ())" "(concat nil ())" "(concat () nil)" "(rest nil)" "(rest ())" "(file-seq nil)" "(mk-scrape.copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\") \\"aaa.html\\")" "(mk-scrape.copy/get-file (clojure.java.io/file \\"/Users/mkouhei0910/project/web/html\\") \\"aaa.html2\\")" "(get-copy-resource \\"/Users/mkouhei0910/project/web/html\\")" "(mk-scrape.core/get-copy-resource \\"/Users/mkouhei0910/project/web/html\\")" "(mk-scrape.core/get-img-list \\"/Users/mkouhei0910/project/web/html\\")" "(mk-scrape.core/get-img-list \\"/Users/mkouhei0910/project/web/shakariki_items\\")" "(mk-scrape.core/convert-to-map \\"/Users/mkouhei0910/project/web/shakariki_items\\")" "(mk-scrape.converter/create-paths \\"/Users/mkouhei0910/project/web/shakariki_items\\")" "(mk-scrape.core/convert-to-map \\"/Users/mkouhei0910/project/web/shakariki_items\\")" "(def a1 (mk-scrape.converter/create-paths \\"/Users/mkouhei0910/project/web/shakariki_items\\"))" "(mk-scrape.converter/fetch a1)" "(defn a2 (mk-scrape.converter/fetch a1))" "(def a2 (mk-scrape.converter/fetch a1))" "(def a3 (mk-scrape.converter/convert-to-map a2))" "a3" "a2" "(+ 1 1)" "(+ 2 2)" "(+ 1 2)" "(mk-scrape.converter/convert-to-map [nil nil nil])" "(mk-scrape.converter/convert-to-map \\"/Users/mkouhei0910/project/web/shakariki_items\\")" "(mk-scrape.converter/get-copy-resource \\"/Users/mkouhei0910/project/web/shakariki_items\\")" "(mk-scrape.core/get-copy-resource \\"/Users/mkouhei0910/project/web/shakariki_items\\")" " (mk-scrape.core/get-copy-resource \\"/Users/mkouhei0910/project/web/shakariki_items\\")" "(mk-scrape.core/convert-to-map \\"/Users/mkouhei0910/project/web/shakariki_items\\")" "(def aa (mk-scrape.converter/create-paths \\"/Users/mkouhei0910/project/web/shakariki_items\\"))" "aa" "(mk-scrape.converter/fetch aa)"]
eclipse.preferences.version=1
